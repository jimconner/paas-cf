---
resource_types:
- name: git-gpg
  type: docker-image
  source:
    repository: governmentpaas/git-resource

- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource

- name: semver-iam
  type: docker-image
  source:
    repository: governmentpaas/semver-resource

resources:
  - name: paas-cf
    type: git-gpg
    source:
      uri: https://github.com/jimconner/paas-cf.git
      branch: {{branch_name}}
      tag_filter: {{paas_cf_tag_filter}}
      commit_verification_key_ids: {{gpg_ids}}

  - name: vpc-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: vpc.tfstate

  - name: bosh-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: bosh.tfstate

  - name: bosh-init-state
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: {{bosh_manifest_state}}

  - name: bosh-manifest
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: bosh-manifest.yml

  - name: bosh-secrets
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: bosh-secrets.yml

  - name: pipeline-trigger
    type: semver-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      key: {{pipeline_trigger_file}}

  - name: concourse-tfstate
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      versioned_file: concourse.tfstate
      region_name: {{aws_region}}

  - name: concourse-manifest
    type: s3-iam
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      versioned_file: concourse-manifest.yml

jobs:
  - name: init
    serial: true
    plan:
      - get: paas-cf
      - get: concourse-manifest
      - task: self-update-pipeline
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/self-update-pipelines
          inputs:
            - name: paas-cf
            - name: concourse-manifest
          params:
            DEPLOY_ENV: {{deploy_env}}
            BRANCH: {{branch_name}}
            MAKEFILE_ENV_TARGET: {{makefile_env_target}}
            SELF_UPDATE_PIPELINE: {{self_update_pipeline}}
            PIPELINES_TO_UPDATE: {{pipeline_name}}
            ENABLE_DESTROY: {{enable_destroy}}
          run:
            path: ./paas-cf/concourse/scripts/self-update-pipeline.sh
      - put: pipeline-trigger
        params: {bump: patch}

  - name: bosh-init-delete
    serial: true
    plan:
      - aggregate:
          - get: pipeline-trigger
            trigger: true
            passed: ['init']
          - get: paas-cf
          - get: bosh-secrets
          - get: bosh-init-state
          - get: bosh-manifest
      - task: check-existing-deployments
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
          inputs:
            - name: paas-cf
            - name: bosh-secrets
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./paas-cf/concourse/scripts/bosh_login.sh {{bosh_fqdn}} bosh-secrets/bosh-secrets.yml

                ./paas-cf/concourse/scripts/bosh_pre_destroy.rb
      - task: cleanup-orphaned-disks
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
          inputs:
            - name: paas-cf
            - name: bosh-secrets
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./paas-cf/concourse/scripts/bosh_login.sh {{bosh_fqdn}} bosh-secrets/bosh-secrets.yml

                bosh cleanup --all
      - task: bosh-init-microbosh
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-init
          inputs:
            - name: paas-cf
            - name: bosh-manifest
            - name: bosh-init-state
          params:
            BOSH_MANIFEST_STATE: {{bosh_manifest_state}}
          outputs:
            - name: bosh-init-working-dir
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                cp bosh-manifest/bosh-manifest.yml bosh-init-working-dir/bosh-manifest.yml
                cp bosh-init-state/"${BOSH_MANIFEST_STATE}" bosh-init-working-dir/bosh-manifest-state.json
                bosh-init delete bosh-init-working-dir/bosh-manifest.yml
                # If the delete is successful, the file will be missing
                if [ ! -f bosh-init-working-dir/bosh-manifest-state.json ]; then
                  cp paas-cf/concourse/init_files/bosh-init-state.json.tpl bosh-init-working-dir/bosh-manifest-state.json
                fi
        ensure:
          put: bosh-init-state
          params:
            file: "bosh-init-working-dir/bosh-manifest-state.json"

  - name: bosh-terraform-destroy
    serial: true
    plan:
      - aggregate:
          - get: pipeline-trigger
            passed: ['bosh-init-delete']
            trigger: true
          - get: paas-cf
            passed: ['bosh-init-delete']
          - get: vpc-tfstate
          - get: concourse-tfstate
          - get: bosh-tfstate
          - get: bosh-secrets
      - task: extract-terraform-variables
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ruby
              tag: 2.2-slim
          inputs:
            - name: paas-cf
            - name: vpc-tfstate
            - name: concourse-tfstate
            - name: bosh-secrets
          outputs:
            - name: terraform-variables
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < vpc-tfstate/vpc.tfstate > terraform-variables/vpc.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
                < concourse-tfstate/concourse.tfstate > terraform-variables/concourse.tfvars.sh
                ruby paas-cf/concourse/scripts/extract_tf_vars_from_yaml.rb \
                < bosh-secrets/bosh-secrets.yml > terraform-variables/bosh-secrets.tfvars.sh
      - task: terraform-destroy
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/terraform
          inputs:
            - name: paas-cf
            - name: terraform-variables
            - name: bosh-tfstate
          outputs:
            - name: updated-bosh-tfstate
          params:
            DEPLOY_ENV: {{deploy_env}}
            AWS_DEFAULT_REGION: {{aws_region}}
            TF_VAR_system_dns_zone_name: {{system_dns_zone_name}}
            TF_VAR_bosh_az: {{bosh_az}}
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                . terraform-variables/vpc.tfvars.sh
                . terraform-variables/concourse.tfvars.sh
                . terraform-variables/bosh-secrets.tfvars.sh

                touch paas-cf/terraform/bosh/id_rsa.pub paas-cf/terraform/bosh/bosh_id_rsa.pub
                terraform destroy -force -var env={{deploy_env}} -var-file=paas-cf/terraform/{{aws_account}}.tfvars \
                  -state=bosh-tfstate/bosh.tfstate -state-out=updated-bosh-tfstate/bosh.tfstate paas-cf/terraform/bosh
        ensure:
          put: bosh-tfstate
          params:
            file: updated-bosh-tfstate/bosh.tfstate

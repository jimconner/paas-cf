meta:
  release:
    name: cf

  api_consul_services:
    cloud_controller_ng: {}

  api_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: cloud_controller_ng
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))
  - name: statsd-injector
    release: (( grab meta.release.name ))
  - name: java-buildpack
    release: (( grab meta.release.name ))
  - name: java-offline-buildpack
    release: (( grab meta.release.name ))
  - name: go-buildpack
    release: (( grab meta.release.name ))
  - name: binary-buildpack
    release: (( grab meta.release.name ))
  - name: nodejs-buildpack
    release: (( grab meta.release.name ))
  - name: ruby-buildpack
    release: (( grab meta.release.name ))
  - name: php-buildpack
    release: (( grab meta.release.name ))
  - name: python-buildpack
    release: (( grab meta.release.name ))
  - name: staticfile-buildpack
    release: (( grab meta.release.name ))

  api_worker_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: cloud_controller_worker
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))

  clock_templates:
  - name: cloud_controller_clock
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))

  consul_templates:
  - name: consul_agent
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))

  etcd_templates:
  - name: consul_agent
    release: (( grab meta.release.name ))
  - name: etcd
    release: etcd
  - name: etcd_metrics_server
    release: etcd
  - name: metron_agent
    release: (( grab meta.release.name ))

  loggregator_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: doppler
    release: (( grab meta.release.name ))
  - name: syslog_drain_binder
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))

  loggregator_trafficcontroller_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: loggregator_trafficcontroller
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))

  nats_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: nats
    release: (( grab meta.release.name ))
  - name: nats_stream_forwarder
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))

  router_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: gorouter
    release: routing
  - name: metron_agent
    release: (( grab meta.release.name ))
  - name: haproxy
    release: paas-haproxy

  uaa_templates:
  - name: consul_agent
    release: (( grab meta.consul_templates.consul_agent.release ))
  - name: uaa
    release: (( grab meta.release.name ))
  - name: metron_agent
    release: (( grab meta.release.name ))
  - name: statsd-injector
    release: (( grab meta.release.name ))

  diego_job_templates:
    brain:
      - name: consul_agent
        release: cf
      - name: auctioneer
        release: diego
      - name: converger
        release: diego
      - name: metron_agent
        release: cf
    cell:
      - name: consul_agent
        release: cf
      - name: rep
        release: diego
      - name: garden
        release: garden-linux
      - name: cflinuxfs2-rootfs-setup
        release: cflinuxfs2-rootfs
      - name: metron_agent
        release: cf
    cc_bridge:
      - name: consul_agent
        release: cf
      - name: stager
        release: cf
      - name: nsync
        release: cf
      - name: tps
        release: cf
      - name: cc_uploader
        release: cf
      - name: metron_agent
        release: cf
    route_emitter:
      - name: consul_agent
        release: cf
      - name: route_emitter
        release: diego
      - name: metron_agent
        release: cf
    access:
      - name: consul_agent
        release: cf
      - name: ssh_proxy
        release: diego
      - name: metron_agent
        release: cf
      - name: file_server
        release: diego
    database:
      - name: consul_agent
        release: cf
      - name: bbs
        release: diego
      - name: metron_agent
        release: cf
    colocated:
      - name: consul_agent
        release: cf
      - name: auctioneer
        release: diego
      - name: bbs
        release: diego
      - name: cc_uploader
        release: cf
      - name: converger
        release: diego
      - name: file_server
        release: diego
      - name: metron_agent
        release: cf
      - name: nsync
        release: cf
      - name: route_emitter
        release: diego
      - name: ssh_proxy
        release: diego
      - name: stager
        release: cf
      - name: tps
        release: cf

jobs:
  - name: consul
    azs: [z1, z2, z3]
    templates: (( grab meta.consul_templates ))
    instances: 3
    persistent_disk: 1024
    vm_type: small
    stemcell: default
    networks:
      - name: cf
        static_ips:
          - 10.0.16.37
          - 10.0.17.37
          - 10.0.18.37
    update:
      serial: true
    properties:
      consul:
        agent:
          mode: server
      metron_agent:
        zone: ""

  - name: nats
    azs: [z1, z2]
    templates: (( grab meta.nats_templates ))
    instances: 2
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
        static_ips:
          - 10.0.16.11
          - 10.0.17.11
    properties:
      metron_agent:
        zone: ""

  - name: etcd
    azs: [z1, z2, z3]
    templates: (( grab meta.etcd_templates ))
    instances: 3
    persistent_disk: 10024
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
        static_ips:
          - 10.0.16.19
          - 10.0.17.19
          - 10.0.18.19
    update:
      serial: true
    properties:
      metron_agent:
        zone: ""
      consul:
        agent:
          services:
            etcd: {}

  - name: uaa
    azs: [z1, z2]
    templates: (( grab meta.uaa_templates ))
    instances: 2
    vm_type: uaa
    stemcell: default
    networks:
      - name: cf
    properties:
      consul:
        agent:
          services:
            uaa: {}
      metron_agent:
        zone: ""

  - name: api
    azs: [z1, z2]
    templates: (( grab meta.api_templates ))
    instances: 2
    vm_type: api
    stemcell: default
    networks:
      - name: cf
    properties:
      consul:
        agent:
          services: (( grab meta.api_consul_services ))
      metron_agent:
        zone: ""

  - name: clock_global
    azs: [z1]
    templates: (( grab meta.clock_templates ))
    instances: 1
    vm_type: clock_global
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""

  - name: api_worker
    azs: [z1, z2]
    templates: (( grab meta.api_worker_templates ))
    instances: 2
    vm_type: api_worker
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""


  - name: doppler
    azs: [z1, z2]
    templates: (( grab meta.loggregator_templates ))
    instances: 2
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
    properties:
      doppler:
        zone: ""
      metron_agent:
        zone: ""

  - name: loggregator_trafficcontroller
    azs: [z1, z2]
    templates: (( grab meta.loggregator_trafficcontroller_templates ))
    instances: 2
    vm_type: loggregator_trafficcontroller
    stemcell: default
    networks:
      - name: cf
    properties:
      traffic_controller:
        zone: ""
      metron_agent:
        zone: ""

  - name: router
    azs: [z1, z2]
    templates: (( grab meta.router_templates ))
    instances: 2
    vm_type: router
    stemcell: default
    networks:
      - name: router
    properties:
      consul:
        agent:
          services:
            gorouter: {}
      metron_agent:
        zone: ""

# Diego

  - name: colocated
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.colocated ))
    instances: 2
    vm_type: colocated
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""
    update:
      serial: true
    # FIXME: remove once deployed to prod.
    migrated_from:
      - {name: colocated_z1, az: z1}
      - {name: colocated_z2, az: z2}

  - name: database
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.database ))
    instances: 0
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""
    update:
      serial: true

  - name: brain
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.brain ))
    instances: 0
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""

  - name: cell
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.cell ))
    instances: (( grab meta.cell.instances ))
    vm_type: cell
    stemcell: default
    networks:
      - name: cell
    properties:
      metron_agent:
        zone: ""
    # FIXME: remove once deployed to prod.
    migrated_from:
      - {name: cell_z1, az: z1}
      - {name: cell_z2, az: z2}

  - name: cc_bridge
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.cc_bridge ))
    instances: 0
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""

  - name: route_emitter
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.route_emitter ))
    instances: 0
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""

  - name: access
    azs: [z1, z2]
    templates: (( grab meta.diego_job_templates.access ))
    instances: 0
    vm_type: access
    stemcell: default
    networks:
      - name: cf
    properties:
      metron_agent:
        zone: ""
